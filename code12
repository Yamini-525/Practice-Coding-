import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
        List<Integer> li=new ArrayList<>();
        List<Integer> l1=new ArrayList<>();
        int count1=0;
        int count2=0;
        int count3=0;
        int count4=0;
        int count5=0;
          for(int i=0;i<arr.size();i++)
          {
              if(arr.get(i)==1)
              {
                  count1++;
                 
              }
              if(arr.get(i)==2)
              {
                  count2++;
                 
              }
              if(arr.get(i)==3)
              {
                  count3++;
                 
              }
              if(arr.get(i)==4)
              {
                  count4++;
                  
              }
              if(arr.get(i)==5)
              {
                  count5++;
                 
              }
              
          }
            li.add(count1);
             li.add(count2);
              li.add(count3);
            li.add(count4);
             li.add(count5);
            
          int max=li.get(0);
          for(int i=1;i<li.size();i++)
          {
              if(li.get(i)>max)
              {
                  max=li.get(i);
              }
          }
          for(int j=0;j<li.size();j++)
          {
              if(max==li.get(j))
              {
                  l1.add(j);
              }
          }
       
       int a=l1.get(0)+1;
       return a;
       
    }
   

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
